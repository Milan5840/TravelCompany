// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelCompany.Web.Data;

namespace TravelCompany.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TravelCompany.Web.Data.Entities.ExpensesEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("feeding");

                    b.Property<double>("lodging");

                    b.Property<double>("representation");

                    b.Property<double>("transport");

                    b.HasKey("id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("TravelCompany.Web.Data.Entities.ExpensesTypeEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExpensesEntityid");

                    b.Property<int>("NumberDays");

                    b.Property<string>("VisitReason");

                    b.HasKey("id");

                    b.HasIndex("ExpensesEntityid");

                    b.ToTable("ExpensesType");
                });

            modelBuilder.Entity("TravelCompany.Web.Data.Entities.TravelDetailsEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<DateTime>("Date");

                    b.Property<int>("Document");

                    b.Property<int?>("ExpensesTypeEntityid");

                    b.Property<string>("FullName");

                    b.HasKey("id");

                    b.HasIndex("ExpensesTypeEntityid");

                    b.ToTable("TravelDetails");
                });

            modelBuilder.Entity("TravelCompany.Web.Data.Entities.TravelEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.Property<double>("Total");

                    b.Property<int?>("TravelDetailsid");

                    b.HasKey("id");

                    b.HasIndex("TravelDetailsid");

                    b.ToTable("Travel");
                });

            modelBuilder.Entity("TravelCompany.Web.Data.Entities.ExpensesTypeEntity", b =>
                {
                    b.HasOne("TravelCompany.Web.Data.Entities.ExpensesEntity")
                        .WithMany("ExpensesType")
                        .HasForeignKey("ExpensesEntityid");
                });

            modelBuilder.Entity("TravelCompany.Web.Data.Entities.TravelDetailsEntity", b =>
                {
                    b.HasOne("TravelCompany.Web.Data.Entities.ExpensesTypeEntity")
                        .WithMany("TravelDetails")
                        .HasForeignKey("ExpensesTypeEntityid");
                });

            modelBuilder.Entity("TravelCompany.Web.Data.Entities.TravelEntity", b =>
                {
                    b.HasOne("TravelCompany.Web.Data.Entities.TravelDetailsEntity", "TravelDetails")
                        .WithMany("Travel")
                        .HasForeignKey("TravelDetailsid");
                });
#pragma warning restore 612, 618
        }
    }
}
